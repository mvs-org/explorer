{
    "runtime_id": 12,
    "types": {
    "Address": "AccountId",
    "LookupSource": "AccountId",
    "BalanceInfo": "null",
    "EtpBalance": "Balance",
	"DnaBalance": "Balance",
	"TsInMs": "u64",
	"Power": "u32",
	"DepositId": "U256",
    "MappedEtp": "u128",
    "EthereumTransactionIndex": "(H256, u64)",
	"EthereumBlockNumber": "u64",
    "EthereumReceiptProofThing": "(EthereumHeader, EthereumReceiptProof, MMRProof)",
    "RelayAuthoritySigner": "EthereumAddress",
	"RelayAuthorityMessage": "EcdsaMessage",
	"RelayAuthoritySignature": "EcdsaSignature",
    "EcdsaSignature": "[u8; 65; EcdsaSignature]",
    "AddressT": "[u8; 20; AddressT]",
    "OpCode": "[u8; 4; OpCode]",
	"Term": "u32",
	"RelayHeaderId": "EthereumBlockNumber",
	"RelayHeaderParcel": "EthereumRelayHeaderParcel",
	"RelayProofs": "EthereumRelayProofs",
    "MMRRoot": "Hash",
    "BalanceLock": {
      "type": "struct",
      "type_mapping": [
		["id", "LockIdentifier"],
		["lock_for", "LockFor"],
		["lock_reasons", "LockReasons"],
		["amount", "Balance"],
		["reasons", "Reasons"]
      ]
    },
    "LockFor": {
        "type": "enum",
        "value_list": [
            "Common",
            "Staking"
          ]
      },
      "Common": {
        "type": "struct",
        "type_mapping": [
            ["amount", "Balance"]
        ]
      },
      "StakingLock": {
        "type": "struct",
        "type_mapping": [
            ["staking_amount", "Balance"],
            ["unbondings", "Vec<Unbonding>"]
        ]
      },
      "LockReasons": {
        "type": "enum",
        "value_list": [
            "Fee",
            "Misc",
            "All"
        ]
      },
      "Unbonding": {
        "type": "struct",
        "type_mapping": [
            ["amount", "Balance"],
            ["until", "BlockNumber"]
        ]
      },
      "AccountData": {
        "type": "struct",
        "type_mapping": [
            ["free", "Balance"],
            ["reserved", "Balance"],
            ["free_dna", "Balance"],
            ["reserved_dna", "Balance"],
            ["misc_frozen", "Balance"],
            ["fee_frozen", "Balance"]
        ]
      },
      "StakingBalanceT": {
        "type": "enum",
        "value_list": [
            "EtpBalance",
            "DnaBalance"
        ]
      },
      "StakingLedgerT": {
        "type": "struct",
        "type_mapping": [
    		["stash", "AccountId"],
		    ["active_etp", "Compact<Balance>"],
		    ["active_deposit_etp", "Compact<Balance>"],
		    ["active_dna", "Compact<Balance>"],
		    ["deposit_items", "Vec<TimeDepositItem>"],
		    ["etp_staking_lock", "StakingLock"],
		    ["dna_staking_lock", "StakingLock"],
		    ["claimed_rewards", "Vec<EraIndex>"],
		    ["total", "Compact<Balance>"],
		    ["active", "Compact<Balance>"],
		    ["unlocking", "Vec<UnlockChunk>"]
        ]
      },
      "TimeDepositItem": {
        "type": "struct",
        "type_mapping": [
    		["value", "Compact<Balance>"],
		    ["start_time", "Compact<TsInMs>"],
		    ["expire_time", "Compact<TsInMs>"]
        ]
      },
      "ExposureT": {
        "type": "struct",
        "type_mapping": [
            ["own_etp_balance", "Compact<Balance>"],
            ["own_dna_balance", "Compact<Balance>"],
            ["own_power", "Power"],
            ["total_power", "Power"],
            ["others", "Vec<IndividualExposure>"]
        ]
      },
      "IndividualExposure": {
        "type": "struct",
        "type_mapping": [
            ["who", "AccountId"],
            ["etp_balance", "Compact<Balance>"],
            ["dna_balance", "Compact<Balance>"],
            ["power", "Power"],
            ["value", "Compact<Balance>"]
        ]
      },
      "ElectionResultT": {
        "type": "struct",
        "type_mapping": [
            ["elected_stashes", "Vec<AccountId>"],
            ["exposures", "Vec<(AccountId, ExposureT)>"],
            ["compute", "ElectionCompute"]
        ]
      },
      "RKT": {
        "type": "struct",
        "type_mapping": [
            ["r", "Balance"],
            ["k", "Balance"]
        ]
      },
      "SpanRecord": {
        "type": "struct",
        "type_mapping": [
            ["slashed", "RKT"],
            ["paid_out", "RKT"]
        ]
      },
      "UnappliedSlash": {
        "type": "struct",
        "type_mapping": [
            ["validator", "AccountId"],
            ["own", "RKT"],
            ["others", "Vec<(AccountId, RKT)>"],
            ["reporters", "Vec<AccountId>"],
            ["payout", "RKT"]
        ]
      },
      "TreasuryProposal": {
        "type": "struct",
        "type_mapping": [
            ["proposer", "AccountId"],
            ["beneficiary", "AccountId"],
            ["etp_value", "Balance"],
            ["dna_value", "Balance"],
            ["etp_bond", "Balance"],
            ["dna_bond", "Balance"]
        ]
      },
      "EthereumHeader": {
        "type": "struct",
        "type_mapping": [
            ["parent_hash", "H256"],
            ["timestamp", "u64"],
            ["number", "EthereumBlockNumber"],
            ["author", "EthereumAddress"],
            ["transactions_root", "H256"],
            ["uncles_hash", "H256"],
            ["extra_data", "Bytes"],
            ["state_root", "H256"],
            ["receipts_root", "H256"],
            ["log_bloom", "Bloom"],
            ["gas_used", "U256"],
            ["gas_limit", "U256"],
            ["difficulty", "U256"],
            ["seal", "Vec<Bytes>"],
            ["hash", "Option<H256>"]
        ]
      },
      "EthashProof": {
        "type": "struct",
        "type_mapping": [
            ["dag_nodes", "(H512, H512)"],
            ["proof", "Vec<H128>"]
        ]
      },
      "EthereumReceipt": {
        "type": "struct",
        "type_mapping": [
            ["gas_used", "U256"],
            ["log_bloom", "Bloom"],
            ["logs", "Vec<LogEntry>"],
            ["outcome", "TransactionOutcome"]
        ]
      },
      "EthereumNetworkType": {
        "type": "enum",
        "value_list": [
            "Mainnet",
            "Ropsten"
        ]
      },
      "RedeemFor": {
        "type": "enum",
        "value_list": [
            "Token",
            "Deposit"
        ]
      },
      "EthereumReceiptProof": {
        "type": "struct",
        "type_mapping": [
        	["index", "u64"],
		    ["proof", "Bytes"],
		    ["header_hash", "H256"]
        ]
      },
      "MMRProof": {
        "type": "struct",
        "type_mapping": [
            ["member_leaf_index", "u64"],
            ["last_leaf_index", "u64"],
            ["proof", "Vec<H256>"]
        ]
      },
      "EthereumRelayHeaderParcel": {
        "type": "struct",
        "type_mapping": [
            ["header", "EthereumHeader"],
            ["parent_mmr_root", "H256"]
        ]
      },
      "EthereumRelayProofs": {
        "type": "struct",
        "type_mapping": [
            ["ethash_proof", "Vec<EthashProof>"],
            ["mmr_proof", "Vec<H256>"]
        ]
      },
      "OtherAddress": {
        "type": "enum",
        "value_list": [
            "Eth",
            "Tron"
        ]
      },
      "MerkleMountainRangeRootLog": {
        "type": "struct",
        "type_mapping": [
            ["prefix", "[u8; 4; Prefix]"],
            ["parent_mmr_root", "Hash"]
        ]
      },
      "RelayAffirmationT": {
        "type": "struct",
        "type_mapping": [
    		["relayer", "AccountId"],
		    ["relay_header_parcels", "EthereumRelayHeaderParcel"],
		    ["bond", "Balance"],
		    ["maybe_extended_relay_affirmation_id", "Option<RelayAffirmationId>"],
		    ["verified", "bool"]
        ]
      },
      "RelayVotingState": {
        "type": "struct",
        "type_mapping": [
            ["ayes", "Vec<AccountId>"],
            ["nays", "Vec<AccountId>"]
        ]
      },
      "RelayAuthorityT": {
        "type": "struct",
        "type_mapping": [
            ["account_id", "AccountId"],
            ["signer", "Signer"],
            ["stake", "Balance"],
            ["term", "BlockNumber"]
        ]
      },
      "ScheduledAuthoritiesChangeT": {
        "type": "struct",
        "type_mapping": [
            ["next_authorities", "Vec<RelayAuthorityT>"],
            ["deadline", "BlockNumber"]
        ]
      },
      "ProxyType": {
        "type": "enum",
        "value_list": [
            "Any",
            "NonTransfer",
            "Governance",
            "Staking",
            "EthereumBridge"
        ]
      },
      "BalancesRuntimeDispatchInfo": {
        "type": "struct",
        "type_mapping": [
            ["usable_balance", "Balance"]
        ]
      },
      "StakingRuntimeDispatchInfo": {
        "type": "struct",
        "type_mapping": [
            ["power", "Power"]
        ]
      }
      },
    "versioning": [
    ]
  }
